#Set Path
setwd("C:\\Users\\91630\\Desktop\\21BT3EP11_Bioinformatics_Mini_Project")
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(version = "3.19")

BiocManager::install("DESeq2")
library("DESeq2")

#Read Data
data=read.table("GSE207456_counts.txt",header=T)
samp=read.table("SampleInformation_GSE207456.csv",header=T)
datamatrix=as.data.frame(data)
sampmatrix=as.data.frame(samp)
#Differential Gene Expression Analysis
colnames(sampmatrix); if ("Sample.Information.Design" %in% colnames(sampmatrix)) { dds <- DESeqDataSetFromMatrix(countData = datamatrix, colData = sampmatrix, design = ~1); dds } else { print("Error: 'Sample.Information.Design' variable not found in sampmatrix.") }
dds

prdds <- DESeq(dds)
prdds

#FDR_Cutoff_10%
res.10 <- results(prdds, alpha=.10)
res.10

table(res.10$padj < .05)
mcols(res.10, use.names=TRUE)

write.csv(res.10, "GSE207456_FDR_Cutoff10_Results.csv")
summary(res.10)

resSig <- subset(res.10, padj < 0.1)
resSig
sort=resSig[ order(resSig$log2FoldChange, decreasing=TRUE), ]
write.csv(sort, "Sorted list of differentially expressed genes FDR cutoff 10%.csv")

#MA Plot
plotMA(res.10, ylim=c(-5,5))
dev.copy2pdf(file="GSE207456_FDRCutoff10_MAPlot.pdf")

#LFC_&_FDR_Cutoff 10%
resLFC1 <- results(prdds, alpha=.10, lfcThreshold=1)
table(resLFC1$padj < 0.1)
resLFC1
write.csv(resLFC1, "GSE207456_FDR&LFC_Cutoff10_Results.csv")

summary(resLFC1)
resSig2 <- subset(resLFC1, padj < 0.1)
sort2=resSig2[ order(resSig2$log2FoldChange, decreasing=TRUE), ]
write.csv(sort2, "Sorted list of differentially expressed genes LFC and FDR cutoff 10%.csv")

#MAPlot_FDR_Cutoff10
plotMA(resLFC1, ylim=c(-5,5))
dev.copy2pdf(file = "MAPlot_GSE207456_FDR_LFC_Cutoff10.pdf")

#Volcano Plot
##Generating volcano plot points for res

point1 = res[which(abs(res$log2FoldChange)>1 & res$padj < 0.05),]
point2 = res[which(abs(res$log2FoldChange)<=1 & res$padj < 0.05),]
point3 = res[which(abs(res$log2FoldChange)>1 & res$padj > 0.05),]
point4 = res[which(abs(res$log2FoldChange)<=1 & res$padj > 0.05),]

##Plotting volcano plot
plot(point1$log2FoldChange, -log(point1$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
       rgb(1,0,0,0.3), main="Volcano plot", xlab="Log2FoldChange",ylab="-log10(padj)", cex.axis=1.2 )
points(point2$log2FoldChange, -log(point2$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
         rgb(0,0,1,0.3), cex.axis=1.2 )
points(point3$log2FoldChange, -log(point3$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
         rgb(0,0,0,0.3), cex.axis=1.2 )
points(point4$log2FoldChange, -log(point4$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
         rgb(0,0,0,0.3), cex.axis=1.2 )
abline(h = -log(0.05), col = "yellow", lty = 2, lwd = 2)
abline(v = 1, col = "brown", lty = 2, lwd = 2)
abline(v = -1, col = "brown", lty = 2, lwd = 2)
dev.copy2pdf(file = "Volcano_Plot_GSE207456.pdf", useDingbats = F)

##Generating volcano plot points for LFC + FDR cutoff 10%
points1 = res[which(abs(resLFC1$log2FoldChange)>1 & resLFC1$padj < 0.05),]
points2 = res[which(abs(resLFC1$log2FoldChange)<=1 & resLFC1$padj < 0.05),]
points3 = res[which(abs(resLFC1$log2FoldChange)>1 & resLFC1$padj > 0.05),]
points4 = res[which(abs(resLFC1$log2FoldChange)<=1 & resLFC1$padj > 0.05),]

##Plotting volcano plot
plot(points1$log2FoldChange, -log(points1$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
       rgb(1,0,0,0.3), cex.axis=1.2 )
points(points2$log2FoldChange, -log(points2$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
         rgb(0,0,1,0.3), cex.axis=1.2 )
points(points3$log2FoldChange, -log(points3$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
         rgb(0,0,0,0.3), cex.axis=1.2 )
points(points4$log2FoldChange, -log(points4$padj), pch = 16, xlim = c(-4,4), ylim = c(0,50), col =
         rgb(0,0,0,0.3), cex.axis=1.2 )

abline(h = -log(0.05), col = "yellow", lty = 2, lwd = 2)
abline(v = 1, col = "brown", lty = 2, lwd = 2)
abline(v = -1, col = "brown", lty = 2, lwd = 2)
dev.copy2pdf(file ="Volcano_Plot_GSE207456LFC.pdf", useDingbats = F)

#Histogram of p values
hist( res.10$pvalue, breaks=20, col="blue")
hist( resLFC1$pvalue, breaks=20, col="green" )

#Heatmap

install.packages("gplots")
library(gplots)
heatmapdata <- read.csv("Sorted genes list with raw counts for heatmap.csv")
rownames(heatmapdata)<- heatmapdata$Genes
map = as.matrix(heatmapdata[1:50,-1])
heatmap.2(map, scale = "row", trace="none", dendrogram="none") #unclustered
heatmap.2(map, scale = "row", trace="none", dendrogram="row")  #clustered

pdf("HeatMap_GSE207456.pdf")
